
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.19'
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.ll.exam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    implementation 'com.drewnoakes:metadata-extractor:2.18.0'

    // spring에서 redis에 대한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // spring에서 redis를 session storage로 사용하기 위한 의존성
    implementation 'org.springframework.session:spring-session-data-redis'

    implementation 'ws.schild:jave-all-deps:3.3.1'

    implementation 'org.apache.tika:tika-core:2.6.0'
    implementation 'com.mpatric:mp3agic:0.9.1'
    // https://mvnrepository.com/artifact/org.gagravarr/vorbis-java-core
    implementation 'org.gagravarr:vorbis-java-core:0.8'
}

tasks.named('test') {
    useJUnitPlatform()
}

task deploy(type: Exec) {
    def securityYml = new org.yaml.snakeyaml.Yaml().loadAll(new File("$projectDir/src/main/resources/application-security.yml").newInputStream()).first()

    def tomcatUser = 'deployer'
    def tomcatPass = securityYml.custom.deploy.tomcat.pass
    def tomcatHost = 'cono.oa.gg'
    def tomcatPort = 443
    def tomcatDeployVersion = securityYml.custom.deploy.tomcat.version

    def warFilePath = 'build/libs/' + war.archiveName

    commandLine 'curl', '-T', warFilePath, 'https://' + tomcatUser + ':' + tomcatPass + '@' + tomcatHost + ':' + tomcatPort + '/manager/text/deploy?path=/ROOT%23%23' + tomcatDeployVersion
}

task buildAndDeploy(dependsOn: ["build", "deploy"])